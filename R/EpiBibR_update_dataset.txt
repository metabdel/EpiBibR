
update_dataset <- function(silence = FALSE){
  flag <- FALSE

  # dans ce qui suit, on va comparer la date du fichier de données du package sur CRAN avec la date du fichier de données du package dans sa version de développement sur Github. On va aller chercher les fichiers de données respectifs:
  
  ## d'abord, sur CRAN:
  
  epibibr_cran <- EpiBibR::rData # ici, il faut trouver un moyen de mémoriser la date du fichier de données sur CRAN
  
  ## ensuite sur Github:
  
  url <- paste0("https://warin.ca/ressources/data/epiBib/EpiBib.Rdata")
  path <- file.path(tempdir(), "temp.Rdata")
  curl::curl_download(url, path)
  rData <- file.path(paste0(tempdir(), "/temp.Rdata"))
  load(rData)
  
  epibibr_github <- utils::load(rData)
  
  ## and then removing the temp folder
  unlink(tempdir())
  
  
  epibibr_github$date <- base::as.Date(epibibr_github$date) # il faudra créer une colonne data si elle n'existe pas dans le fichier de données avec la date de mise à jour du package sur Github
  
  
  if(!base::identical(epibibr_github, epibibr_cran)){
    if(base::nrow(epibibr_github) > base::nrow(epibibr_cran)){
      flag <- TRUE
    }
  }
  
  if(flag){
    if(!silence){
      q <- base::tolower(base::readline("Updates are available on the EpiBibR development version, do you want to update? n/Y"))
    } else {
      q <- "y"
    }
    if(q == "y" | q == "yes"){
      
      base::tryCatch(
        expr = {
          devtools::install_github("warint/EpiBibR",
                                   upgrade = "never",
                                   ref = "master")
          
          # base::message("The data was refreshed, please restart your session to have the new data available")
          # If library is loaded, auto onload and load the library to have the new data available
          if ("EpibBibR" %in% names(utils::sessionInfo()$otherPkgs)) { 
            detach(package:EpiBibR, unload = TRUE)
            library(EpiBibR)
          }
        },
        error = function(e){
          message('Caught an error!')
          print(e)
        },
        warning = function(w){
          message('Caught a warning!')
          print(w)
        }
        
      )
    }
  } else {
    base::message("No updates are available")
  }

}
